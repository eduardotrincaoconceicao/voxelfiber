%% Simulation of the 3D Structure of Paper
% This demo shows some examples of using the forming function.

% Copyright 2008, University of Coimbra
% Copyright 2019, Eduardo L. T. Conceicao
% Available under the GPL-3


figure( ...
       'Units', 'normalized', ...
       'OuterPosition', [0.5 0 0.5 0.07], ...
       'NumberTitle', 'off', ...
       'MenuBar', 'none', ...
       'Toolbar', 'none');
axes('Position', [0 0 1 1], 'Visible', 'off');
text(0.5, 0.5, ...
     'Simulating Low Grammage Paper Structure with a Cellular Automaton', ...
     'HorizontalAlignment', 'center', ...
     'FontUnits', 'normalized', ...
     'FontSize', 0.47, ...
     'FontWeight', 'bold');

%% Animation of fiber deposition (SLOW)
forming([21 21 30 40], [1 1 2 2], 100, 100, nfib = 50, ...
        horzspan = [1 2 1 2], trace = true);

%% Animation of fiber deposition (FAST)
forming([21 21 30 40], [1 2 3 4], 200, 200, nfib = 750, ...
        trace = true, delay_trace = 0.01);

%% Exploring the effects of formation parameters on network generation
figure( ...
       'Units', 'normalized', ...
       'OuterPosition', [0 0.6 0.5 0.4], ...
       'Name', 'Exploring the effects of formation parameters', ...
       'NumberTitle', 'off', ...
       'Toolbar', 'none');
colormap bone

% First, let's generate a spatial distribution of fibers uniformly random
paper = forming([150 50], [1 1], 400, 400, ...
                acceptanceprob = 1, alpha = 1, ...
                stop_criterion = 'Grammage', grammage = 15, ...
                mass = 'coarseness', coarseness = [0.168e-3 0.190e-3], ...
                delxy = 10e-6, ...
                fib_width = [5 3], wall_thick = [2 2], lumen_thick = [0 0], ...
                fraction = [0.35 0.65]);
subplot(1,2,1)
c = coverage(paper);
imagesc(c.point)
axis image
title('Spatial distribution of fibers uniformly random')

% Next, let's favour deposition into valleys
paper = forming([150 50], [1 1], 400, 400, ...
                acceptanceprob = 0.01, alpha = 0.94, ...
                stop_criterion = 'Grammage', grammage = 15, ...
                mass = 'coarseness', coarseness = [0.168e-3 0.190e-3], ...
                delxy = 10e-6, ...
                fib_width = [5 3], wall_thick = [2 2], lumen_thick = [0 0], ...
                fraction = [0.35 0.65]);
subplot(1,2,2)
c = coverage(paper);
imagesc(c.point)
axis image
title('Drainage-based smoothing mechanism')
drawnow

%% 3D Visualization
figure( ...
       'Units', 'normalized', ...
       'OuterPosition', [0 0 0.5 0.52], ...
       'Name', 'Simulated 3D fiber web', ...
       'NumberTitle', 'off', ...
       'Toolbar', 'none');
view(3)
p = patch(isosurface(paper.web, 0), 'FaceColor', 'blue', 'EdgeColor', 'none');
reducepatch(p, 0.5)
isonormals(paper.web, p)
daspect([1 10/4.3*4 1])
axis tight vis3d
material dull
camlight left; camlight right; lighting flat
pause(5), camzoom(2), pause(5), camzoom(2), pause(5)
view([0 -90])
camzoom(1/2), pause(5), camzoom(4), pause(5), camzoom(4), pause(5)
view([0 0])
camzoom(1/32), pause(5), camzoom(2), pause(5), camzoom(2), pause(5)